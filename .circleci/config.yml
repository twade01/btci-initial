version: 2

# Functions and Ref/Vars ============================================================================================

references:

working_directory: &working_directory
  ~/btci

repo_cache_key: &repo_cache_key
  v1-repo-{{ .Branch }}-{{ .Revision }}

restore_repo: &restore_repo
  restore_cache:
    key: *repo_cache_key

save_repo: &save_repo
  save_cache:
    key: *repo_cache_key
    paths:
      - *working_directory

set_terraform_environment: &set_terraform_environment
  run:
    name: Configure terraform environment
    command: |
      cd && touch $BASH_ENV
      if [ "${CIRCLE_BRANCH}" == "master" ]; then
        echo 'export TERRAFORM_ENVIRONMENT=production' >> $BASH_ENV
        export AWS_ACCESS_KEY_ID=${awsa}
        export AWS_SECRET_ACCESS_KEY=${awss}
        export AWS_DEFAULT_REGION="us-west-1"
      else
        echo 'export TERRAFORM_ENVIRONMENT=staging' >> $BASH_ENV
        # export AWS_ACCESS_KEY_ID="awsa$"
        export AWS_ACCESS_KEY_ID=${awsa}
        # export AWS_SECRET_ACCESS_KEY="awss$"
        export AWS_SECRET_ACCESS_KEY=${awss}
        export AWS_DEFAULT_REGION="us-west-1"
      fi

terraform_init: &terraform_init
  run:
    name: terraform init
    command: |
      source $BASH_ENV
      cd environments/$TERRAFORM_ENVIRONMENT
      terraform init

apply_job: &apply_job
  <<: *default_config
  steps:
    - *restore_repo
    - *set_terraform_environment
    - *terraform_init
    - attach_workspace:
        at: *working_directory
    - run:
        name: terraform apply
        command: |
          source $BASH_ENV
          cd environments/$TERRAFORM_ENVIRONMENT
          terraform apply --auto-approve ../../terraform.plan

# End Functions and Ref/Vars ============================================================================================

jobs:

# Packer ============================================================================================

  packer-validate:
    docker:
      - image: hashicorp/packer:light
    steps:
      - checkout
      - run:
          name: Validate Templates
          command: ls ./packer/*.json | xargs -I{} packer validate {}

  packer-build-ami:
    docker:
      - image: hashicorp/packer:light
    steps:
      - checkout
      - run:
          name: Set creds
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              mkdir ~/.aws
              echo [default] >> ~/.aws/credentials
              echo aws_access_key_id=${awsa} >> ~/.aws/credentials
              echo aws_secret_access_key=${awss} >> ~/.aws/credentials
              echo [default] >> ~/.aws/config
              echo region=us-west-1 >> ~/.aws/config
              echo output=text >> ~/.aws/config
              # export AWS_ACCESS_KEY_ID="${awsa}"
              # export AWS_SECRET_ACCESS_KEY="${awss}"
              # export AWS_DEFAULT_REGION="us-west-1"
            else
              # export AWS_ACCESS_KEY_ID=${awsa}
              # export AWS_SECRET_ACCESS_KEY=${awss}
              # export AWS_DEFAULT_REGION="us-west-1"
            fi
      - run:
          name: Build base ami
          command: packer build ./packer/packer.json
          no_output_timeout: 30m

# END Packer ============================================================================================

# Terraform ============================================================================================

  terraform-plan:
    docker:
      - image: hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: Set creds
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              mkdir ~/.aws
              echo [default] >> ~/.aws/credentials
              echo aws_access_key_id=${awsa} >> ~/.aws/credentials
              echo aws_secret_access_key=${awss} >> ~/.aws/credentials
              echo [default] >> ~/.aws/config
              echo region=us-west-1 >> ~/.aws/config
              echo output=text >> ~/.aws/config
              export AWS_ACCESS_KEY_ID="${awsa}"
              export AWS_SECRET_ACCESS_KEY="${awss}"
              export AWS_DEFAULT_REGION="us-west-1"
            else
              export AWS_ACCESS_KEY_ID=${awsa}
              export AWS_SECRET_ACCESS_KEY=${awss}
              export AWS_DEFAULT_REGION="us-west-1"
            fi
      - run:
          name: terraform init
          command: cd ./terraform/ && terraform init
      - run:
          name: terraform plan
          command: cd ./terraform/ && terraform plan

  terraform-apply:
    docker:
      - image: hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: Set creds
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              mkdir ~/.aws
              echo [default] >> ~/.aws/credentials
              echo aws_access_key_id=${awsa} >> ~/.aws/credentials
              echo aws_secret_access_key=${awss} >> ~/.aws/credentials
              echo [default] >> ~/.aws/config
              echo region=us-west-1 >> ~/.aws/config
              echo output=text >> ~/.aws/config
              export AWS_ACCESS_KEY_ID="${awsa}"
              export AWS_SECRET_ACCESS_KEY="${awss}"
              export AWS_DEFAULT_REGION="us-west-1"
            else
              export AWS_ACCESS_KEY_ID=${awsa}
              export AWS_SECRET_ACCESS_KEY=${awss}
              export AWS_DEFAULT_REGION="us-west-1"
            fi
      - run:
          name: terraform init
          command: cd ./terraform/ && terraform init
      - run:
          name: terraform plan
          command: cd ./terraform/ && terraform plan
      - run:
          name: terraform apply
          command: cd ./terraform/ && terraform init && terraform apply -auto-approve

# END Terraform ============================================================================================

# ------------------------------------------------------------------------------------

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - packer-validate
      - packer-build-ami:
          requires:
            - packer-validate
      - terraform-plan:
          requires:
            - packer-build-ami
      - terraform-apply:
          requires:
            - terraform-plan
